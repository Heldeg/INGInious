var CsvConverter=function(){function t(t){this.data=t}return t.prototype.downloadCsv=function(){var t="data:text/csv;charset=utf-8,"+Papa.unparse(this.data),e=encodeURI(t),i=document.createElement("a");i.setAttribute("href",e),i.setAttribute("download","export.csv"),document.body.appendChild(i),i.click(),i.remove()},t}(),Statistic=function(){function t(){this._cachedPromise=null}return t.prototype._fetchAndCacheData=function(){return null==this._cachedPromise&&(this._cachedPromise=this._fetchData()),this._cachedPromise},t.prototype.plotAsync=function(){var t=this;this._fetchAndCacheData().then(function(e){t._plotData(e)})},t.prototype._fetchCsvData=function(){return this._fetchAndCacheData()},t.prototype.downloadCsvAsync=function(){this._fetchCsvData().then(function(t){new CsvConverter(t).downloadCsv()})},t.prototype._plotData=function(t){throw"Not implemented"},t.prototype._fetchData=function(){throw"Not implemented"},t}();function createSubmissionLink(t){return _.template("/submission/${ submissionId }")({submissionId:t})}function generateVerdictSubmissionTable(t,e){var i=$("#"+t);i.html("<thead><tr><th>Username</th><th>Grade</th><th>Status</th><th>Summary result</th><th>Submitted on</th><th>Submission</th></tr></thead>");for(var a=$("<tbody/>"),s=0;s<e.length;++s){for(var n=$("<tr/>"),r=e[s],o=[r.username,r.grade,r.status||"-",r.summary_result||"-",r.submitted_on||"-"],c=0;c<o.length;++c){var u=$("<td/>");u.text(o[c]),n.append(u)}var d=$("<td/>");if(r.id){var l=$("<a>",{text:r.id,href:createSubmissionLink(r.id)});d.append(l)}else d.text("No submission available");n.append(d),a.append(n)}i.append(a)}function generateSubmissionTable(t,e){var i=$("#"+t);i.html("<thead><tr><th>Username</th><th>Grade</th><th>Status</th><th>Summary result</th><th>Submitted on</th><th>Submission</th></tr></thead>");for(var a=$("<tbody/>"),s=0;s<e.length;++s){for(var n=$("<tr/>"),r=e[s],o=r.submission||{},c=[r.username,r.grade,o.status||"-",o.summary_result||"-",o.submitted_on||"-"],u=0;u<c.length;++u){var d=$("<td/>");d.text(c[u]),n.append(d)}var l=$("<td/>");if(o.id){var _=$("<a>",{text:o.id,href:createSubmissionLink(o.id)});l.append(_)}else l.text("No submission available");n.append(l),a.append(n)}i.append(a)}function createAlertHtml(t,e){return'<div class="alert '+t+' alert-dismissible" role="alert"><button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>'+e+"</div>"}var COLOR_COMPILATION_ERROR="rgb(236,199,6)",COLOR_TIME_LIMIT_EXCEEDED="rgb(50,120,202)",COLOR_MEMORY_LIMIT_EXCEEDED="rgb(119,92,133)",COLOR_RUNTIME_ERROR="rgb(2,164,174)",COLOR_WRONG_ANSWER="rgb(227,79,54)",COLOR_INTERNAL_ERROR="rgb(137,139,37)",COLOR_ACCEPTED="rgb(35,181,100)",COLOR_LABEL="rgb(107, 107, 107)",errorContainer=$("#plotErrorContainer");function getDataNormalized(t,e){return t.count/e[t.task_id]*100}function getData(t,e){return t.count}function createObjectToPlotData(t,e,i,a,s){for(var n={x:[],y:[],marker:{color:a},name:i,type:"bar"},r=0;r<t.length;++r)t[r].summary_result===i&&(n.x.push(t[r].task_id),n.y.push(s(t[r],e)));return n}function plotVerdictStatisticsChart(t,e,i,a,s,n){for(var r={},o=a?"Percentage of tasks":"Number of tasks",c=[],u=0;u<e.length;u++)null==r[e[u].task_id]&&(r[e[u].task_id]=0,c.push(e[u].task_id)),r[e[u].task_id]+=e[u].count;var d=a?getDataNormalized:getData,l=[createObjectToPlotData(e,r,"COMPILATION_ERROR",COLOR_COMPILATION_ERROR,d),createObjectToPlotData(e,r,"TIME_LIMIT_EXCEEDED",COLOR_TIME_LIMIT_EXCEEDED,d),createObjectToPlotData(e,r,"MEMORY_LIMIT_EXCEEDED",COLOR_MEMORY_LIMIT_EXCEEDED,d),createObjectToPlotData(e,r,"RUNTIME_ERROR",COLOR_RUNTIME_ERROR,d),createObjectToPlotData(e,r,"WRONG_ANSWER",COLOR_WRONG_ANSWER,d),createObjectToPlotData(e,r,"INTERNAL_ERROR",COLOR_INTERNAL_ERROR,d),createObjectToPlotData(e,r,"ACCEPTED",COLOR_ACCEPTED,d)],_={barmode:"stack",title:i,hovermode:"closest",xaxis:{title:"Tasks",categoryorder:"array",categoryarray:c,titlefont:{size:16,color:COLOR_LABEL}},yaxis:{title:o,titlefont:{size:16,color:COLOR_LABEL}}};Plotly.purge(t),Plotly.newPlot(t,l,_);var m=$("#"+t);m.unbind("plotly_click"),m[0].on("plotly_click",function(t){var e=t.points[0],i=e.pointNumber,a=e.data.x[i],r=e.data.name;$.get(s,{course_id:adminStatistics.courseId,task_id:a,summary_result:r},n,"json").fail(function(){errorContainer.html(createAlertHtml("alert-danger","Something went wrong while fetching the submission list. Try again later."))})})}var GradeDistributionStatistic=function(){function t(t){Statistic.call(this),this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){var e=_.map(t,function(t){return{y:t.grades,taskId:t.task_id,name:t.task_name,boxmean:!0,type:"box",marker:{outliercolor:"rgba(219, 64, 82, 0.6)",line:{outliercolor:"rgba(219, 64, 82, 1.0)",outlierwidth:2}},boxpoints:"all"}});Plotly.newPlot(this.containerId,e,{xaxis:{title:"Task name",type:"category"},yaxis:{title:"Grade",type:"linear",range:[-10,110],zeroline:!1}});var i=$("#"+this.containerId);i.unbind("plotly_click"),i[0].on("plotly_click",function(t){var e=t.points[0].data.taskId;errorContainer.empty(),$.get("/api/stats/admin/grade_distribution_details",{course_id:adminStatistics.courseId,task_id:e},function(t){generateSubmissionTable("statisticsGradeDistributionTable",t)},"json").fail(function(){errorContainer.html(createAlertHtml("alert-danger","Something went wrong while fetching the submission list. Try again later."))})})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/grade_distribution",{course_id:adminStatistics.courseId},null,"json")},t}();GradeDistributionStatistic.prototype._fetchData=function(){return $.get("/api/stats/admin/grade_distribution",{course_id:adminStatistics.courseId},null,"json")},GradeDistributionStatistic.prototype._fetchCsvData=function(){return this._fetchAndCacheData().then(function(t){return _.flatMap(t,function(t){return _.map(t.grades,function(e){return{task_id:t.task_id,task_name:t.task_name,grade:e}})})})};var SubmissionsVerdictStatistic=function(){function t(t){Statistic.call(this),this.toggle_normalize_submissions_per_tasks=!1,this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){var e=generateVerdictSubmissionTable;plotVerdictStatisticsChart(this.containerId,t,"Submissions Vs Verdicts (ALL)",this.toggle_normalize_submissions_per_tasks,"/api/stats/admin/submissions_verdict_details",function(t){e("submissionsVerdictTable",t)})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/submissions_verdict",{course_id:adminStatistics.courseId},null,"json")},t.prototype.toggleNormalize=function(){this.toggle_normalize_submissions_per_tasks=!this.toggle_normalize_submissions_per_tasks,this.plotAsync()},t}(),BestSubmissionsVerdictStatistic=function(){function t(t){Statistic.call(this),this.toggle_normalize_best_submissions_per_tasks=!1,this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){var e=generateSubmissionTable;plotVerdictStatisticsChart(this.containerId,t,"Submissions Vs Verdicts (BEST)",this.toggle_normalize_best_submissions_per_tasks,"/api/stats/admin/best_submissions_verdict_details",function(t){e("bestSubmissionsVerdictTable",t)})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/best_submissions_verdict",{course_id:adminStatistics.courseId},null,"json")},t.prototype.toggleNormalize=function(){this.toggle_normalize_best_submissions_per_tasks=!this.toggle_normalize_best_submissions_per_tasks,this.plotAsync()},t}(),GradeCountStatistic=function(){function t(t){Statistic.call(this),this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){for(var e=_.flatMap(t,function(t){return t.grades}),i={mode:"markers",x:[],y:[],taskIds:[],text:[],marker:{sizemode:"area",size:[],sizeref:.001*_.meanBy(e,function(t){return t.count})}},a=0;a<t.length;++a)for(var s=t[a].grades,n=0;n<s.length;++n)i.x.push(t[a].task_name),i.y.push(s[n].grade),i.taskIds.push(t[a].task_id),i.text.push("Students: "+s[n].count),i.marker.size.push(s[n].count);Plotly.newPlot(this.containerId,[i],{xaxis:{title:"Task name",type:"category"},yaxis:{title:"Grade",type:"linear",range:[-10,110]},hovermode:"closest"});var r=$("#"+this.containerId);r.unbind("plotly_click"),r[0].on("plotly_click",function(t){var e=t.points[0],i=e.pointNumber,a=e.data.taskIds[i],s=e.y;errorContainer.empty(),$.get("/api/stats/admin/grade_count_details",{course_id:adminStatistics.courseId,task_id:a,grade:s},function(t){generateSubmissionTable("statisticsGradeTable",t)},"json").fail(function(){errorContainer.html(createAlertHtml("alert-danger","Something went wrong while fetching the submission list. Try again later."))})})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/grade_count",{course_id:adminStatistics.courseId},null,"json")},t.prototype._fetchCsvData=function(){return this._fetchAndCacheData().then(function(t){return _.flatMap(t,function(t){return _.map(t.grades,function(e){return{task_id:t.task_id,task_name:t.task_name,grade:e.grade,count:e.count}})})})},t}(),gradeCountStatistic=new GradeCountStatistic("statisticsGradeDiv"),gradeDistributionStatistic=new GradeDistributionStatistic("statisticsGradeDistributionDiv"),submissionsVerdictStatistic=new SubmissionsVerdictStatistic("submissionsVerdictDiv"),bestSubmissionsVerdictStatistic=new BestSubmissionsVerdictStatistic("bestSubmissionsVerdictDiv"),tabToStatistic={gradeCount:gradeCountStatistic,gradeDistribution:gradeDistributionStatistic,submissionsVerdict:submissionsVerdictStatistic,bestSubmissionsVerdict:bestSubmissionsVerdictStatistic};$(function(){$('a[data-toggle="tab"]').on("shown.bs.tab",function(t){var e=tabToStatistic[t.target.getAttribute("aria-controls")];e&&e.plotAsync()}),$('.active > a[data-toggle="tab"]').trigger("shown.bs.tab")});