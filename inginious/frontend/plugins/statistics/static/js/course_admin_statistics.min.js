var COLOR_COMPILATION_ERROR="rgb(236,199,6)",COLOR_TIME_LIMIT_EXCEEDED="rgb(50,120,202)",COLOR_MEMORY_LIMIT_EXCEEDED="rgb(119,92,133)",COLOR_RUNTIME_ERROR="rgb(2,164,174)",COLOR_WRONG_ANSWER="rgb(227,79,54)",COLOR_INTERNAL_ERROR="rgb(137,139,37)",COLOR_ACCEPTED="rgb(35,181,100)",COLOR_LABEL="rgb(107, 107, 107)",errorContainer=$("#plotErrorContainer");function getDataNormalized(t,i){return t.count/i[t.task_id]*100}function getData(t,i){return t.count}function createObjectToPlotData(t,i,e,s,a){for(var r={x:[],y:[],marker:{color:s},name:e,type:"bar"},n=0;n<t.length;++n)t[n].summary_result===e&&(r.x.push(t[n].task_id),r.y.push(a(t[n],i)));return r}function plotVerdictStatisticsChart(t,i,e,s,a,r){for(var n={},o=s?"Percentage of tasks":"Number of tasks",c=[],u=0;u<i.length;u++)null==n[i[u].task_id]&&(n[i[u].task_id]=0,c.push(i[u].task_id)),n[i[u].task_id]+=i[u].count;var l=s?getDataNormalized:getData,d=[createObjectToPlotData(i,n,"COMPILATION_ERROR",COLOR_COMPILATION_ERROR,l),createObjectToPlotData(i,n,"TIME_LIMIT_EXCEEDED",COLOR_TIME_LIMIT_EXCEEDED,l),createObjectToPlotData(i,n,"MEMORY_LIMIT_EXCEEDED",COLOR_MEMORY_LIMIT_EXCEEDED,l),createObjectToPlotData(i,n,"RUNTIME_ERROR",COLOR_RUNTIME_ERROR,l),createObjectToPlotData(i,n,"WRONG_ANSWER",COLOR_WRONG_ANSWER,l),createObjectToPlotData(i,n,"INTERNAL_ERROR",COLOR_INTERNAL_ERROR,l),createObjectToPlotData(i,n,"ACCEPTED",COLOR_ACCEPTED,l)],_={barmode:"stack",title:e,hovermode:"closest",xaxis:{title:"Tasks",categoryorder:"array",categoryarray:c,titlefont:{size:16,color:COLOR_LABEL}},yaxis:{title:o,titlefont:{size:16,color:COLOR_LABEL}}};Plotly.purge(t),Plotly.newPlot(t,d,_);var b=$("#"+t);b.unbind("plotly_click"),b[0].on("plotly_click",function(t){var i=t.points[0],e=i.pointNumber,s=i.data.x[e],n=i.data.name;$.get(a,{course_id:adminStatistics.courseId,task_id:s,summary_result:n},r,"json").fail(function(){errorContainer.html(createAlertHtml("alert-danger","Something went wrong while fetching the submission list. Try again later."))})})}var GradeDistributionStatistic=function(){function t(t){Statistic.call(this),this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){var i=_.map(t,function(t){return{y:t.grades,taskId:t.task_id,name:t.task_name,boxmean:!0,type:"box",marker:{outliercolor:"rgba(219, 64, 82, 0.6)",line:{outliercolor:"rgba(219, 64, 82, 1.0)",outlierwidth:2}},boxpoints:"all"}});Plotly.newPlot(this.containerId,i,{xaxis:{title:"Task name",type:"category"},yaxis:{title:"Grade",type:"linear",range:[-10,110],zeroline:!1}});var e=$("#"+this.containerId);e.unbind("plotly_click"),e[0].on("plotly_click",function(t){var i=t.points[0].data.taskId;errorContainer.empty(),$.get("/api/stats/admin/grade_distribution_details",{course_id:adminStatistics.courseId,task_id:i},function(t){generateSubmissionTable("statisticsGradeDistributionTable",t)},"json").fail(function(){errorContainer.html(createAlertHtml("alert-danger","Something went wrong while fetching the submission list. Try again later."))})})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/grade_distribution",{course_id:adminStatistics.courseId},null,"json")},t}();GradeDistributionStatistic.prototype._fetchData=function(){return $.get("/api/stats/admin/grade_distribution",{course_id:adminStatistics.courseId},null,"json")},GradeDistributionStatistic.prototype._fetchCsvData=function(){return this._fetchAndCacheData().then(function(t){return _.flatMap(t,function(t){return _.map(t.grades,function(i){return{task_id:t.task_id,task_name:t.task_name,grade:i}})})})};var SubmissionsVerdictStatistic=function(){function t(t){Statistic.call(this),this.toggle_normalize_submissions_per_tasks=!1,this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){var i=generateVerdictSubmissionTable;plotVerdictStatisticsChart(this.containerId,t,"Submissions Vs Verdicts (ALL)",this.toggle_normalize_submissions_per_tasks,"/api/stats/admin/submissions_verdict_details",function(t){i("submissionsVerdictTable",t)})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/submissions_verdict",{course_id:adminStatistics.courseId},null,"json")},t.prototype.toggleNormalize=function(){this.toggle_normalize_submissions_per_tasks=!this.toggle_normalize_submissions_per_tasks,this.plotAsync()},t}(),BestSubmissionsVerdictStatistic=function(){function t(t){Statistic.call(this),this.toggle_normalize_best_submissions_per_tasks=!1,this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){var i=generateSubmissionTable;plotVerdictStatisticsChart(this.containerId,t,"Submissions Vs Verdicts (BEST)",this.toggle_normalize_best_submissions_per_tasks,"/api/stats/admin/best_submissions_verdict_details",function(t){i("bestSubmissionsVerdictTable",t)})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/best_submissions_verdict",{course_id:adminStatistics.courseId},null,"json")},t.prototype.toggleNormalize=function(){this.toggle_normalize_best_submissions_per_tasks=!this.toggle_normalize_best_submissions_per_tasks,this.plotAsync()},t}(),GradeCountStatistic=function(){function t(t){Statistic.call(this),this.containerId=t}return t.prototype=Object.create(Statistic.prototype),t.prototype._plotData=function(t){for(var i=_.flatMap(t,function(t){return t.grades}),e={mode:"markers",x:[],y:[],taskIds:[],text:[],marker:{sizemode:"area",size:[],sizeref:.001*_.meanBy(i,function(t){return t.count})}},s=0;s<t.length;++s)for(var a=t[s].grades,r=0;r<a.length;++r)e.x.push(t[s].task_name),e.y.push(a[r].grade),e.taskIds.push(t[s].task_id),e.text.push("Students: "+a[r].count),e.marker.size.push(a[r].count);Plotly.newPlot(this.containerId,[e],{xaxis:{title:"Task name",type:"category"},yaxis:{title:"Grade",type:"linear",range:[-10,110]},hovermode:"closest"});var n=$("#"+this.containerId);n.unbind("plotly_click"),n[0].on("plotly_click",function(t){var i=t.points[0],e=i.pointNumber,s=i.data.taskIds[e],a=i.y;errorContainer.empty(),$.get("/api/stats/admin/grade_count_details",{course_id:adminStatistics.courseId,task_id:s,grade:a},function(t){generateSubmissionTable("statisticsGradeTable",t)},"json").fail(function(){errorContainer.html(createAlertHtml("alert-danger","Something went wrong while fetching the submission list. Try again later."))})})},t.prototype._fetchData=function(){return $.get("/api/stats/admin/grade_count",{course_id:adminStatistics.courseId},null,"json")},t.prototype._fetchCsvData=function(){return this._fetchAndCacheData().then(function(t){return _.flatMap(t,function(t){return _.map(t.grades,function(i){return{task_id:t.task_id,task_name:t.task_name,grade:i.grade,count:i.count}})})})},t}(),gradeCountStatistic=new GradeCountStatistic("statisticsGradeDiv"),gradeDistributionStatistic=new GradeDistributionStatistic("statisticsGradeDistributionDiv"),submissionsVerdictStatistic=new SubmissionsVerdictStatistic("submissionsVerdictDiv"),bestSubmissionsVerdictStatistic=new BestSubmissionsVerdictStatistic("bestSubmissionsVerdictDiv"),tabToStatistic={gradeCount:gradeCountStatistic,gradeDistribution:gradeDistributionStatistic,submissionsVerdict:submissionsVerdictStatistic,bestSubmissionsVerdict:bestSubmissionsVerdictStatistic};$(function(){$('a[data-toggle="tab"]').on("shown.bs.tab",function(t){var i=tabToStatistic[t.target.getAttribute("aria-controls")];i&&i.plotAsync()}),$('.active > a[data-toggle="tab"]').trigger("shown.bs.tab")});